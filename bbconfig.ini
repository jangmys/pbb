# all pbb executables accept two command line options:
# 1. -f <inifile> : pass .ini file to executable
# 2. -z p=<problem>,i=<instance>,<opt>
#       ex: -z p=fsp,instance=ta20,o solves ta20 starting with optimal makespan
#       ex: -z p=fsp,instance=ta56   solves ta56 starting from initial UB defined in .ini

#########################################################################################
##### < flowshop, nq , test >
##### for Flowshop start with "ta" !
##### 4,5,6,... for NQueens
[problem]
problem = flowshop ;
instance = ta20 ;

#########################################################################################
############ initial upper bound
############ 0 (bestKnown - read from file)
############ 1 (heuristic)
############ 2 (nothing ... infty)
[initial]
ub = 1
sol = 1

[bb]
singleNode = false

############ 0  [ don't sort sibling nodes]
############ 1  [ sort according to LB]
############ 2  [ sort according to LB + tiebreaker]
sortedDFS = 0

############ tiebreaker = 1 [lb], 2 [delta], 3 [idle]
sortingCriterion = -1

############ 0 [use only WEAK bound LB1]
############ 1 [use only STRONG bound LB2]
############ 2 [try LB1, refine with LB2]
boundingMode = 0

primaryBound=0
secondaryBound=0

############ -1 [build schedule from left to right]
############ 1,2,3 [strategies for scheduling from both ends ]
adaptiveBranchingMode = 1 ; //3

############ for flowshop only
JohnsonMode = 0  ; [0] full, [1] m2=m, [2] m:m+1 [3] learn
earlyStopJohnson = false

############ activate if searching for ALL optimal (or satisfiable) optimal solutions
findAll = false ;

############ 'g' = GPU / 'c' = CPU
type = c

[verbose]
printSolutions = true  ;

[time]
checkpoint = 1800000
balance = 300
timeout = 120   ; timeout for heuristic!!!! (NOT a GOOD hack... need a separate one)

;number of threads used by multi-core workers
;a value <1 means that get_nprocs_conf() is used by default

[multicore]
threads = 2
worksteal = a

[gpu]
nbIVMs = 16384

[truncate]
truncSearch = false ;
truncDepth = 2;
cutoff_bottom = -1 ;
cutoff_top = 3;

#####################################
[heuristic]
initial_heuristic_iters = 100 ; how many iterations for initial heuristic (ILS)?
heuristic_threads = 0 ; how many threads run heuristic in parallel with BB?
heuristic_type = t  ; t = treeSearch / l = ILS / n = none
heuristic_iters = 100 ; how many iterations for that heuristic (if ILS)
treeHeuristicMaxTime = 30 ;
treeHeuristicMaxNodes = 10000;

#####################################
[distributed]
####1 = single complete interval [0,N!]
####2 = read from file
####3 = cut into nproc intervals
initialWork = 3
