#########################################################################################
##### < flowshop, nq , test >
##### for Flowshop start with "ta" !
##### 4,5,6,... for NQueens
[problem]
problem = flowshop ;
instance = ta20 ;


#########################################################################################
############ initial upper bound
############ 0 (bestKnown - read from file)
############ 1 (heuristic)
############ 2 (nothing ... infty)
[initial]
ub = -1
sol = 0

#########################################################################################
### if true, inter-node implementation aspects are disabled...
### if false, run with mpi
[bb]
singleNode = true

############ 0  [ don't sort sibling nodes]
############ 1  [ sort according to LB]
############ 2  [ sort according to LB + tiebreaker]
sortedDFS = 2

############ tiebreaker = 1 [lb], 2 [delta], 3 [idle]
sortingCriterion = -1

############ 0 [use only WEAK bound LB1]
############ 1 [use only STRONG bound LB2]
############ 2 [try LB1, refine with LB2]
boundingMode = 0

############ -1 [build schedule from left to right]
############ 1,2,3 [strategies for scheduling from both ends ]
adaptiveBranchingMode = 3 ; //3

############ for flowshop only
JohnsonMode = 0  ; [0] full, [1] m2=m, [2] m:m+1 [3] learn
earlyStopJohnson = false

############ activate if searching for ALL optimal (or satisfiable) optimal solutions
findAll = false ;

#########################################################################################
[verbose]
printSolutions = true  ;

#########################################################################################
[time]
checkpoint = 1800000 ; only for distributed
balance = 1 ; only for distributed

#########################################################################################
### number of threads used by multi-core workers
### threads < 1 : get_nprocs_conf() is used by default
### threads = 1 : running in sequential mode
[multicore]
threads = -1
worksteal = a

[gpu]
nbIVMs = 16384
singlekernel = 0


[truncate]
truncSearch = false ;
truncDepth = 2;
cutoff_bottom = -1 ;
cutoff_top = 3;

[heuristic]
heuristic_threads = 0 ;
initial_heuristic_iters = 1 ;
heuristic_iters = 100 ;
treeHeuristicMaxTime = 60 ;
treeHeuristicMaxNodes = 1000000;
